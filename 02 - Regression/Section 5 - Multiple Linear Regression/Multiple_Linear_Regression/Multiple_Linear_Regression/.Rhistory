q()
1 + 2
>install.packages(c("JGR","Deducer","DeducerExtras"))
>library(JGR)
>JGR()
install.packages(c("JGR","Deducer","DeducerExtras"))
library(JGR)
library(JGR)
install.packages(c("JGR","Deducer","DeducerExtras"))
install.packages(c("JGR", "Deducer", "DeducerExtras"))
library(JGR)
library(JGR)
JGR()
JGR()
library(JGR)
JGR()
JGR()
livrary(JGR)
library(JGR)
JGR
JGR()
JGR()
4+6
q()
help
help.search("histogram")
help()
help("syntax")
4+6
5656156156^45
34243^6
load(".RData")
GETWD()
GETWD()
getwd()
show()
4+6
library(readr)
SalesJan2009 <- read_csv("C:/Users/a.konstantelakis/Downloads/SalesJan2009.csv")
View(SalesJan2009)
mean(Price)
mean("Price")
mean("Price")
mean(1)
help.search("mean")
summary("SalesJan2009")
View(SalesJan2009)
library("ggplot2", lib.loc="~/R/win-library/3.4")
acs <- read.csv(url("http://stat511.cwick.co.nz/homeworks/acs_or.csv"))
library(readr)
acs <- read_csv("C:/Users/a.konstantelakis/Downloads/acs_or.csv")
View(acs)
mean(acs$age_husband)
mean(acs$bedrooms)
summary(acs)
plot(x = s$age_husband , y = s$age_wife, type = 'p')
plot(x = s$age_husband , y = s$age_wife, type = 'p')
plot(x = acs$age_husband , y = acs$age_wife, type = 'p')
plot(x = acs$age_husband , y = acs$age_wife, type = 'l')
hist(acs$number_children)
hist(acs$bedrooms)
counts <- table(acs$bedrooms)
barplot(counts, main="Bedrooms Distribution",  xlab="Number of Bedrooms")
x <- 2
x
class(x)
y <- 2.0
class(y)
production <-read.table("http://www.stat.tamu.edu/~sheather/book/docs/datasets/production.txt", header=T, sep="")
View(production)
attach(production)
plot(RunTime~RunSize)
production.lm<-lm(RunTime~RunSize, data=production)
summary(production.lm)
attach(production)
install.packages("ggplot2")
install.packages("ggplot2")
q()
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)
y <- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)
relation <- lm(y~x)
plot(y,x,col = "blue",main = "Height & Weight Regression",
abline(lm(x~y)),cex = 1.3,pch = 16,xlab = "Weight in Kg",ylab = "Height in cm")
install.packages("Rfacebook")
x <- 1:5
x
class(x)
for (val in x){ if (val == 3) { break } print(val) }
for (val in x){ if (val == 3) { break } print(val) }
for (val in x){ if (val == 3) {
break }
print(val)
}
for (val in x){ if (val == 3) {
next() }
print(val)
}
c(1.2, 3, TRUE)
x <- list("a"=2.5, "b"=TRUE, "c"=1:3)
str(x)
# Loading the data
production <- read.table("http://www.stat.tamu.edu/~sheather/book/docs/datasets/production.txt", header=T, sep="")
# Attach and plot the data on the R search path
# so objects in the dataset can be accessed by simply giving their names
attach(production)
# draw the scatter plot
plot(RunTime~RunSize)
# Fit the regression model using the function lm(), lm means linear model
production.lm <- lm(RunTime~RunSize, data=production)
# Use the function summary() to get the results
summary(production.lm)
clear
clean
library(data.table)
library(zoo)
library(forecast)
library(ggplot2)
test <- read.csv("DA1718_test.csv")
install.packages("tidyverse")
library(data.table)
install.packages(c("arm", "BH", "bit", "car", "carData", "curl", "data.table", "DBI", "digest", "e1071", "effects", "evaluate", "forecast", "Formula", "ggplot2", "gtools", "highr", "hms", "httpuv", "JGR", "lavaan", "lazyeval", "lme4", "lmtest", "MBESS", "modeltools", "multcomp", "munsell", "mvtnorm", "OpenMx", "openssl", "openxlsx", "quantmod", "quantreg", "RcppArmadillo", "RcppEigen", "RCurl", "readxl", "reshape2", "rJava", "rjson", "rpf", "semTools", "slam", "StanHeaders", "stringi", "stringr", "survey", "testthat", "TH.data", "tm", "tseries", "viridisLite", "XLConnect", "XLConnectJars", "xml2", "xts", "yaml", "zoo"))
load("C:/Users/a.konstantelakis/Google Drive/1. Achilleas Personal/Code/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 5 - Multiple Linear Regression/Multiple_Linear_Regression/Multiple_Linear_Regression/multiple_linear_regression.R")
setwd("C:/Users/a.konstantelakis/Google Drive/1. Achilleas Personal/Code/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 5 - Multiple Linear Regression/Multiple_Linear_Regression/Multiple_Linear_Regression")
wd
wd
install.packages('devtools')
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
IRkernel::installspec(name = 'ir33', displayname = 'R 3.3')
IRkernel::installspec(name = 'ir32', displayname = 'R 3.2')
jupyter qtconsole --kernel=ir
setwd("C:/Users/a.konstantelakis/Google Drive/1. Achilleas Personal/Code/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 5 - Multiple Linear Regression/Multiple_Linear_Regression/Multiple_Linear_Regression")
wd
getwd
ls
ls()
getwd()
getwd
ls()
library(data.table)
library(zoo)
sessionInfo()
library(forecast)
library(ggplot2)
test <- read.csv("DA1718_test.csv")
dataset = read.csv('Data.csv')
dataset = read.csv('50_Startups.csv')
View(dataset)
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
library(caTools)
install.packages("caTools")
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(formula = Profit ~ .,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
regressor
View(dataset)
View(test_set)
View(training_set)
y_pred
